{"version":3,"sources":["components/MeetupItem.js","components/Meetsup.js","components/About.js","components/MeetupDetail.js","components/AddMeetup.js","components/EditMeetup.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["MeetupItem","props","state","item","className","to","this","id","name","Component","Meetsup","meetsup","getMeetups","axios","get","then","response","setState","data","catch","error","console","log","meetupItem","map","meetup","i","key","About","MeetupDetail","details","getMeetup","meetupId","match","params","delete","hashHistory","push","err","city","address","onClick","onDelete","bind","AddMeetup","newMeetup","request","method","url","e","refs","value","addMeetup","preventDefault","onSubmit","type","ref","htmlFor","EditMeetup","handleInputChange","getMeetupDetails","target","onChange","Main","exact","path","render","history","Navbar","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4c5ebe0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\n class MeetupItem extends Component {\n     constructor(props){\n         super(props);\n         this.state ={\n             item: props.item\n         }\n     }\n    render() {\n        return (\n            // <div>\n            <li className=\"collection-item\">\n              <Link to={`/meetsup/${this.state.item.id}`}>  {this.state.item.name}</Link>\n                </li>\n\n\n            // {/* <li className=\"collection-item\">{this.state.item.city}</li>\n            // <li className=\"collection-item\">{this.state.item.address}</li> */}\n            // {/* </div> */}\n        )\n    }\n}\nexport default MeetupItem;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport MeetupItem from './MeetupItem';\n\nclass Meetsup extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n           meetsup: []\n        }\n    }\n    componentDidMount(){\n        this.getMeetups();\n    }\n    getMeetups(){\n        axios.get('http://localhost:3000/api/meetupzs')\n        .then(response => {\n            this.setState({meetsup: response.data}, ()=>{\n                // console.log(this.state);\n            })\n        })\n        .catch(error=> console.log(error));\n    }\n    render() {\n        const meetupItem = this.state.meetsup.map((meetup, i)=>{\n            return(\n              <MeetupItem  key={meetup.id} item={meetup} />\n            )\n        })\n        return (\n            <div>\n                <h1>Meetsup</h1>\n                <ul className=\"collection\">\n                    {meetupItem}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default  Meetsup;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            <h1>About us</h1>\n        </div>\n    );\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport {Link}  from 'react-router-dom';\nimport axios from 'axios';\n\nclass MeetupDetail extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n           details:''\n        }\n    }\n\n    componentDidMount(){\n        this.getMeetup();\n    }\n\n    getMeetup(){\n        let meetupId = this.props.match.params.id;\n        axios.get(`http://localhost:3000/api/meetupzs/${meetupId}`)\n        .then(response => {\n            this.setState({details: response.data}, ()=>{\n                //  console.log(this.state);\n            });\n        })\n        .catch(error=> console.log(error));\n    }\n    onDelete (){\n        let meetupId = this.state.details.id;\n        axios.delete(`http://localhost:3000/api/meetupzs/${meetupId}`)\n        .then(response =>{\n            this.props.hashHistory.push('/');\n\n        })\n        .catch(err => console.log(err));\n    }\n\n    render() {\n        // const meetupItemDetail = this.state.meetsupDetail.map((MeetupDetail, i)=>{\n        //     return(\n        //         <div>\n        //        {/* <MeetupItem  key={meetup.id} item={meetup} /> */}\n\n        //         </div>\n        //     )\n        // })\n        return (\n            <div>\n                <br />\n                <Link className=\"btn gray\" to=\"/\">Back</Link>\n                {/* <h1>meetsupDetail</h1> */}\n                <h1>{this.state.details.name}</h1>\n                <ul className=\"collection\">\n        <li className=\"collection-item\">city:{this.state.details.city}</li>\n        <li className=\"collection-item\">address:{this.state.details.address}</li>\n                </ul>\n                <Link className=\"btn\" to={`/meetsup/edit/${this.state.details.id}`}>Edit</Link>\n                <button onClick={this.onDelete.bind(this)}className=\"btn red right\">Delete</button>\n            </div>\n        )\n    }\n}\nexport default  MeetupDetail;","import React, { Component } from 'react';\nimport axios from 'axios';\n// import {link} from 'react-router-dom';\n// import { hashHistory } from 'react-router';\n\n\nexport default class AddMeetup extends Component {\n\naddMeetup(newMeetup){\n    console.log(newMeetup);\n   axios.request({\n       method: 'post',\n       url: 'http://localhost:3000/api/meetupzs',\n       data: newMeetup\n   }).then(response =>{\n        this.props.hashHistory.push('/');\n   }).catch(err =>console.log(err));\n}\n\n    onSubmit(e){\n       const newMeetup ={\n           name: this.refs.name.value,\n           city: this.refs.city.value,\n           address: this.refs.address.value\n       }\n       this.addMeetup(newMeetup);\n        e.preventDefault();\n    }\n   \n    render() {\n        return (\n            <div>\n                <br />\n                <h1>Add AddMeetup</h1>\n                <form onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"name\"ref=\"name\"/>\n                        <label  htmlFor=\"name\">name</label>\n                    </div>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"city\"ref=\"city\"/>\n                        <label  htmlFor=\"city\">city</label>\n                    </div>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"address\"ref=\"address\"/>\n                        <label  htmlFor=\"address\">address</label >\n                    </div>\n                    <input type=\"submit\" className=\"btn\" value=\"save\" />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\nexport default class EditMeetup extends Component {\n    constructor(props){\n        super(props);\n        this.setState={\n            id: '',\n            name: '',\n            city: '',\n            address: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n     componentDidMount(){\n         this.getMeetupDetails();\n     }\n    getMeetupDetails(){\n        let meetupId = this.props.match.params.id;\n        axios.get(`http://localhost:3000/api/meetupzs/${meetupId}`)\n        .then(response => {\n            this.setState({\n                id: response.data.id,\n                name: response.data.name,\n                city: response.data.city,\n                address:response.data.address\n            }, () =>{\n                console.log(this.state);\n            })\n        })\n        .catch(error=> console.log(error));\n    }\n\n    addMeetup(newMeetup){\n        console.log(newMeetup);\n       axios.request({\n           method: 'post',\n           url: 'http://localhost:3000/api/meetupzs',\n           data: newMeetup\n       }).then(response =>{\n            this.props.hashHistory.push('/');\n       }).catch(err =>console.log(err));\n    }\n    EditMeetup(newMeetup){\n        axios.request({\n            method: 'put',\n            url: `http://localhost:3000/api/meetupzs/${this.state.id}`,\n            data: newMeetup\n        }).then(response =>{\n             this.props.hashHistory.push('/');\n        }).catch(err =>console.log(err));\n\n    }\n    onSubmit(e){\n        const newMeetup ={\n            name: this.refs.name.value,\n            city: this.refs.city.value,\n            address: this.refs.address.value\n        }\n        this.addMeetup(newMeetup);\n         e.preventDefault();\n     }\n\n    handleInputChange (e){\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]:value\n        });\n    }\n    \n   \n    render() {\n        return (\n            <div>\n                <br />\n                <h1> EditMeetup</h1>\n                <form onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"name\"ref=\"name\" value={this.state.name} onChange={this.handleInputChange} />\n                        <label  htmlFor=\"name\">name</label>\n                    </div>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"city\"ref=\"city\" value={this.state.city} onChange={this.handleInputChange} />\n                        <label  htmlFor=\"city\">city</label>\n                    </div>\n                    <div className=\"input-field\" >\n                        <input type=\"text\" name=\"address\"ref=\"address\" value={this.state.address} onChange={this.handleInputChange} />\n                        <label  htmlFor=\"address\">address</label >\n                    </div>\n                    <input type=\"submit\" className=\"btn\" value=\"save\" />\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Meetsup from './Meetsup';\nimport About from './About';\nimport MeetupDetail from './MeetupDetail';\nimport AddMeetup from './AddMeetup';\nimport EditMeetup from './EditMeetup';\n\n\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" Component={Meetsup} >\n                <Meetsup/>\n            </Route>\n            <Route exact path=\"/about\" Component={About}>\n                <About />\n            </Route>\n                {/* <Route exact path=\"/meetsup/:id\" Component={MeetupDetail}>\n                    <MeetupDetail />\n                </Route> */}\n\n            <Route exact path=\"/meetsup/:id\" render={({history})  => <AddMeetup {...history} history={history} />} />\n                <AddMeetup/>\n\n                <Route exact path=\"/meetsup/edit/:id\" \n                render={(props) => <EditMeetup {...props} />}\n            />\n            <EditMeetup />\n\n            <Route exact path=\"/meetsup/:id\" \n                render={(props) => <MeetupDetail {...props} />}\n            />\n            <MeetupDetail />\n            \n\n        </Switch>\n    );\n}\n\nexport default Main;\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"blue darken-3\">\n            <div className=\"nav-wrapper\">\n              <Link to=\"/\" className=\"brand-logo\">MeetsUP</Link>\n              <ul id=\"nav-main\" className=\"right hide-on-med-and-down\">\n                <li><Link to=\"/\"><i className=\"fa fa-users\"></i>MeetsUP</Link></li>\n                <li><Link to=\"badges.html\">About</Link></li>\n                {/* <li><Link to=\"collapsible.html\"></Link></li> */}\n              </ul>\n            </div>\n          </nav>\n                \n        );\n    }\n}\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar'\nimport {Link} from 'react-router-dom';\nconst App = () => {\n  return (\n    <div>\n      <Navbar/>\n      <div className=\"container\">\n     <Main />\n     </div>\n     <div className=\"fixed-action-btn\">\n       <Link to=\"meetsUp/add\" className=\"btn-floating btn-large red\">\n     <i className=\"fa fa-plus\"></i>\n       </Link>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}